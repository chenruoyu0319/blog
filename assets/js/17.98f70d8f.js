(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{285:function(a,s,t){"use strict";t.r(s);var e=t(0),r=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker","aria-hidden":"true"}},[a._v("#")]),a._v(" Docker")]),a._v(" "),t("h2",{attrs:{id:"docker-中的概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-中的概念","aria-hidden":"true"}},[a._v("#")]),a._v(" Docker 中的概念")]),a._v(" "),t("ul",[t("li",[a._v("镜像：一个特殊的文件系统，提供容器运行时所需的程序，库，资源，配置和配置参数，不包含任何动态数据，内容在构建之后也不会被改变")]),a._v(" "),t("li",[a._v("容器： 镜像和容器可以看做是面向对象中的类和实例，容器的实质是进程，运行于一个隔离的环境，容器运行时，已当前镜像为基础，在其上创建一个当前容器的存储层，容器消亡时，任何存储于容器存储层的数据也会被被删除")]),a._v(" "),t("li",[a._v("仓库：集中存储，分发镜像的服务")])]),a._v(" "),t("h2",{attrs:{id:"安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装","aria-hidden":"true"}},[a._v("#")]),a._v(" 安装")]),a._v(" "),t("h3",{attrs:{id:"ubuntu"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ubuntu","aria-hidden":"true"}},[a._v("#")]),a._v(" Ubuntu")]),a._v(" "),t("ul",[t("li",[a._v("卸载旧版本")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt-get")]),a._v(" remove docker \\\n               docker-engine \\\n               docker.io\n")])])]),t("ul",[t("li",[a._v("安装 Docker CE")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt-get")]),a._v(" update\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt-get")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" docker-ce\n")])])]),t("ul",[t("li",[a._v("或使用脚本安装")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" -fsSL get.docker.com -o get-docker.sh\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" sh get-docker.sh --mirror Aliyun\n")])])]),t("ul",[t("li",[a._v("启动 Docker CE")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" systemctl "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("enable")]),a._v(" docker\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" systemctl start docker\n")])])]),t("ul",[t("li",[a._v("添加 Docker 组，并将当前用户加入 Docker 组")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("groupadd")]),a._v(" docker\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("usermod")]),a._v(" -aG docker "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$USER")]),a._v("\n")])])]),t("ul",[t("li",[a._v("测试")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker run hello-world\n")])])]),t("ul",[t("li",[a._v("镜像加速")])]),a._v(" "),t("p",[a._v("编辑或新建 "),t("code",[a._v("/etc/docker/daemon.json")]),a._v(" ，添加以下内容")]),a._v(" "),t("div",{staticClass:"language-json extra-class"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"registry-mirrors"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"https://registry.docker-cn.com"')]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("ul",[t("li",[a._v("重新启动")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" systemctl daemon-reload\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" systemctl restart docker\n")])])]),t("h3",{attrs:{id:"mac："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mac：","aria-hidden":"true"}},[a._v("#")]),a._v(" Mac：")]),a._v(" "),t("ul",[t("li",[a._v("安装")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("brew cask "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" docker\n")])])]),t("ul",[t("li",[a._v("启动")])]),a._v(" "),t("p",[a._v("点击 Docker 图标启动")]),a._v(" "),t("ul",[t("li",[a._v("测试")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker version\ndocker info\n")])])]),t("ul",[t("li",[a._v("镜像加速")])]),a._v(" "),t("p",[a._v("在任务栏点击 Docker 图标 -> Perferences... -> Daemon -> Registry mirrors， 添加以下 URL 后重新启动")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("https://registry.docker-cn.com/\n")])])]),t("h2",{attrs:{id:"使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用","aria-hidden":"true"}},[a._v("#")]),a._v(" 使用")]),a._v(" "),t("h3",{attrs:{id:"拉取镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#拉取镜像","aria-hidden":"true"}},[a._v("#")]),a._v(" 拉取镜像")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker pull "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("选项"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("Docker Registry 地址"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(":端口号"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("/"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("仓库名"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(":标签"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),t("p",[a._v("Docker 镜像仓库地址：地址格式为 <域名/IP>[:端口号]\n仓库名：<用户名>/<软件名>，用户名如果不写，则默认为 "),t("code",[a._v("library")]),a._v("，即官方镜像")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker pull ubuntu:16.04\n")])])]),t("h3",{attrs:{id:"运行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#运行","aria-hidden":"true"}},[a._v("#")]),a._v(" 运行")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker run -it --rm ubuntu:16.04 "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("bash")]),a._v(" \n")])])]),t("ul",[t("li",[t("code",[a._v("-it")]),a._v(": "),t("code",[a._v("-i")]),a._v(":进入交互操作，"),t("code",[a._v("-t")]),a._v(":进入终端")]),a._v(" "),t("li",[t("code",[a._v("--rm")]),a._v(":容器退出后即删除")]),a._v(" "),t("li",[t("code",[a._v("ubuntu:16.04")]),a._v(":使用 "),t("code",[a._v("ubuntu:16.04")]),a._v("作为基础镜像启动")]),a._v(" "),t("li",[t("code",[a._v("bash")]),a._v(": 放在镜像名后的是命令，进入交互式 "),t("code",[a._v("Shell")]),a._v(" 使用 "),t("code",[a._v("bash")])])]),a._v(" "),t("h3",{attrs:{id:"列出镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#列出镜像","aria-hidden":"true"}},[a._v("#")]),a._v(" 列出镜像")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker image "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v("\n")])])]),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\nnginx               latest              e548f1a579cf        11 days ago         109MB\nubuntu              16.04               0458a4468cbc        5 weeks ago         112MB\n")])])]),t("p",[a._v("分别是"),t("code",[a._v("仓库名")]),a._v("，"),t("code",[a._v("标签")]),a._v("，"),t("code",[a._v("镜像ID")]),a._v("，"),t("code",[a._v("创建时间")]),a._v("，"),t("code",[a._v("所占用的空间")])]),a._v(" "),t("h3",{attrs:{id:"删除镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除镜像","aria-hidden":"true"}},[a._v("#")]),a._v(" 删除镜像")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker image "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("选项"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("镜像1"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("镜像2"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("."),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("// 删除名为 ubuntu 的镜像\ndocker image "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" ubuntu\n// 删除名为 ubuntu，标签为 16.04 的镜像\ndocker image "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" ubuntu:16.04\n// 删除所有仓库名为 redis 的所有镜像\ndocker image "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("docker image "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" -q redis"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n// 删除所有在 "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")]),a._v("mongo:3.2"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")])]),a._v("之前的镜像\ndocker image "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("docker image "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" -q -f before"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("mongo:3.2"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])])]),t("ul",[t("li",[t("code",[a._v("Untagged")]),a._v(" 和 "),t("code",[a._v("Deleted")])])]),a._v(" "),t("p",[t("code",[a._v("Untagged")]),a._v(" 取消标签，当删除镜像时先取消标签，当该镜像的所有标签都被取消且没有其他的镜像依赖该镜像时才会执行 "),t("code",[a._v("Deleted")]),a._v("，如果有其他的标签指向该镜像或被其他镜像依赖，则不会删除")]),a._v(" "),t("h3",{attrs:{id:"commit-镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#commit-镜像","aria-hidden":"true"}},[a._v("#")]),a._v(" Commit 镜像")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker commit "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("选项"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("容器ID或容器名"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("仓库名"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(":"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("标签"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker run --name webserver -d -p 80:80 nginx\n")])])]),t("p",[a._v("做一些改动之后提交")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("exec")]),a._v(" -it webserver "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("bash")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'<h1>Hello, Docker!</h1>'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" /usr/share/nginx/html/index.html\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("exit")]),a._v("\n\ndocker commit --author "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"HelloWood"')]),a._v(" --message "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"修改首页"')]),a._v(" webserver nginx:v2\n")])])])])}],!1,null,null,null);r.options.__file="Docker.md";s.default=r.exports}}]);